/*! tailwindcss v4.1.11 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-white: #fff;
    --spacing: 0.25rem;
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --tracking-tighter: -0.05em;
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --animate-button: button 6.5s ease-in-out forwards infinite;
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .absolute {
    position: absolute;
  }
  .relative {
    position: relative;
  }
  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .top-\[-5\%\] {
    top: -5%;
  }
  .right-3 {
    right: calc(var(--spacing) * 3);
  }
  .right-\[-5\%\] {
    right: -5%;
  }
  .right-\[-30\%\] {
    right: -30%;
  }
  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }
  .bottom-10 {
    bottom: calc(var(--spacing) * 10);
  }
  .bottom-\[0\%\] {
    bottom: 0%;
  }
  .bottom-\[16\%\] {
    bottom: 16%;
  }
  .left-3 {
    left: calc(var(--spacing) * 3);
  }
  .left-\[-30\%\] {
    left: -30%;
  }
  .left-\[20\%\] {
    left: 20%;
  }
  .z-10 {
    z-index: 10;
  }
  .z-20 {
    z-index: 20;
  }
  .z-40 {
    z-index: 40;
  }
  .z-\[-1\] {
    z-index: -1;
  }
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .mt-5 {
    margin-top: calc(var(--spacing) * 5);
  }
  .mt-20 {
    margin-top: calc(var(--spacing) * 20);
  }
  .mt-24 {
    margin-top: calc(var(--spacing) * 24);
  }
  .mr-5 {
    margin-right: calc(var(--spacing) * 5);
  }
  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }
  .flex {
    display: flex;
  }
  .size-1\/4 {
    width: calc(1/4 * 100%);
    height: calc(1/4 * 100%);
  }
  .size-16 {
    width: calc(var(--spacing) * 16);
    height: calc(var(--spacing) * 16);
  }
  .size-24 {
    width: calc(var(--spacing) * 24);
    height: calc(var(--spacing) * 24);
  }
  .h-1\.5 {
    height: calc(var(--spacing) * 1.5);
  }
  .h-3 {
    height: calc(var(--spacing) * 3);
  }
  .h-10 {
    height: calc(var(--spacing) * 10);
  }
  .h-\[40\%\] {
    height: 40%;
  }
  .h-\[clamp\(40px\,5vh\,20vh\)\] {
    height: clamp(40px, 5vh, 20vh);
  }
  .h-\[max\(10vh\,10vw\)\] {
    height: max(10vh, 10vw);
  }
  .h-\[max\(20vh\,20vw\)\] {
    height: max(20vh, 20vw);
  }
  .h-auto {
    height: auto;
  }
  .h-dvh {
    height: 100dvh;
  }
  .h-full {
    height: 100%;
  }
  .w-8 {
    width: calc(var(--spacing) * 8);
  }
  .w-12 {
    width: calc(var(--spacing) * 12);
  }
  .w-16 {
    width: calc(var(--spacing) * 16);
  }
  .w-20 {
    width: calc(var(--spacing) * 20);
  }
  .w-\[60\%\] {
    width: 60%;
  }
  .w-\[75\%\] {
    width: 75%;
  }
  .w-\[80\%\] {
    width: 80%;
  }
  .w-\[90\%\] {
    width: 90%;
  }
  .w-\[clamp\(40px\,50vh\,80\%\)\] {
    width: clamp(40px, 50vh, 80%);
  }
  .w-\[max\(10vh\,10vw\)\] {
    width: max(10vh, 10vw);
  }
  .w-\[max\(30vh\,30vw\)\] {
    width: max(30vh, 30vw);
  }
  .w-full {
    width: 100%;
  }
  .translate-y-\[-70\%\] {
    --tw-translate-y: -70%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-\[50\%\] {
    --tw-translate-y: 50%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .rotate-\[50deg\] {
    rotate: 50deg;
  }
  .animate-button {
    animation: var(--animate-button);
  }
  .flex-col {
    flex-direction: column;
  }
  .items-center {
    align-items: center;
  }
  .justify-center {
    justify-content: center;
  }
  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }
  .gap-\[5px\] {
    gap: 5px;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .bg-white\/50 {
    background-color: color-mix(in srgb, #fff 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 50%, transparent);
    }
  }
  .bg-linear-to-r {
    --tw-gradient-position: to right;
    @supports (background-image: linear-gradient(in lab, red, red)) {
      --tw-gradient-position: to right in oklab;
    }
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .from-\[\#FF8837\] {
    --tw-gradient-from: #FF8837;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-\[\#FF2B21\] {
    --tw-gradient-to: #FF2B21;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-\[clamp\(16px\,1\.5vw\,20px\)\] {
    font-size: clamp(16px, 1.5vw, 20px);
  }
  .font-\[500\] {
    --tw-font-weight: 500;
    font-weight: 500;
  }
  .-tracking-tighter {
    --tw-tracking: calc(var(--tracking-tighter) * -1);
    letter-spacing: calc(var(--tracking-tighter) * -1);
  }
  .tracking-tighter {
    --tw-tracking: var(--tracking-tighter);
    letter-spacing: var(--tracking-tighter);
  }
  .whitespace-nowrap {
    white-space: nowrap;
  }
  .text-\[\#121212\] {
    color: #121212;
  }
  .text-\[\#FFFFFF\] {
    color: #FFFFFF;
  }
  .text-\[\#fd7458\] {
    color: #fd7458;
  }
  .opacity-75 {
    opacity: 75%;
  }
  .sm\:mt-24 {
    @media (width >= 40rem) {
      margin-top: calc(var(--spacing) * 24);
    }
  }
  .sm\:size-20 {
    @media (width >= 40rem) {
      width: calc(var(--spacing) * 20);
      height: calc(var(--spacing) * 20);
    }
  }
  .sm\:size-28 {
    @media (width >= 40rem) {
      width: calc(var(--spacing) * 28);
      height: calc(var(--spacing) * 28);
    }
  }
  .sm\:w-20 {
    @media (width >= 40rem) {
      width: calc(var(--spacing) * 20);
    }
  }
  .sm\:w-\[min\(20vh\,20vw\)\] {
    @media (width >= 40rem) {
      width: min(20vh, 20vw);
    }
  }
  .md\:right-\[-20\%\] {
    @media (width >= 48rem) {
      right: -20%;
    }
  }
  .md\:bottom-12 {
    @media (width >= 48rem) {
      bottom: calc(var(--spacing) * 12);
    }
  }
  .md\:left-8 {
    @media (width >= 48rem) {
      left: calc(var(--spacing) * 8);
    }
  }
  .md\:left-\[-20\%\] {
    @media (width >= 48rem) {
      left: -20%;
    }
  }
  .md\:mt-4 {
    @media (width >= 48rem) {
      margin-top: calc(var(--spacing) * 4);
    }
  }
  .md\:mt-12 {
    @media (width >= 48rem) {
      margin-top: calc(var(--spacing) * 12);
    }
  }
  .md\:mt-40 {
    @media (width >= 48rem) {
      margin-top: calc(var(--spacing) * 40);
    }
  }
  .md\:mr-12 {
    @media (width >= 48rem) {
      margin-right: calc(var(--spacing) * 12);
    }
  }
  .md\:size-28 {
    @media (width >= 48rem) {
      width: calc(var(--spacing) * 28);
      height: calc(var(--spacing) * 28);
    }
  }
  .md\:size-40 {
    @media (width >= 48rem) {
      width: calc(var(--spacing) * 40);
      height: calc(var(--spacing) * 40);
    }
  }
  .md\:h-2 {
    @media (width >= 48rem) {
      height: calc(var(--spacing) * 2);
    }
  }
  .md\:h-5 {
    @media (width >= 48rem) {
      height: calc(var(--spacing) * 5);
    }
  }
  .md\:h-12 {
    @media (width >= 48rem) {
      height: calc(var(--spacing) * 12);
    }
  }
  .md\:h-\[8\%\] {
    @media (width >= 48rem) {
      height: 8%;
    }
  }
  .md\:w-16 {
    @media (width >= 48rem) {
      width: calc(var(--spacing) * 16);
    }
  }
  .md\:w-24 {
    @media (width >= 48rem) {
      width: calc(var(--spacing) * 24);
    }
  }
  .md\:w-28 {
    @media (width >= 48rem) {
      width: calc(var(--spacing) * 28);
    }
  }
  .md\:w-40 {
    @media (width >= 48rem) {
      width: calc(var(--spacing) * 40);
    }
  }
  .md\:w-\[max\(30vh\,30vw\)\] {
    @media (width >= 48rem) {
      width: max(30vh, 30vw);
    }
  }
  .md\:w-\[min\(20vh\,20vw\)\] {
    @media (width >= 48rem) {
      width: min(20vh, 20vw);
    }
  }
  .md\:w-\[min\(30vh\,30vw\)\] {
    @media (width >= 48rem) {
      width: min(30vh, 30vw);
    }
  }
  .md\:text-2xl {
    @media (width >= 48rem) {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
  }
  .md\:text-\[2\.5vw\] {
    @media (width >= 48rem) {
      font-size: 2.5vw;
    }
  }
  .md\:text-\[3vw\] {
    @media (width >= 48rem) {
      font-size: 3vw;
    }
  }
  .md\:text-\[4rem\] {
    @media (width >= 48rem) {
      font-size: 4rem;
    }
  }
  .lg\:mt-20 {
    @media (width >= 64rem) {
      margin-top: calc(var(--spacing) * 20);
    }
  }
  .lg\:size-20 {
    @media (width >= 64rem) {
      width: calc(var(--spacing) * 20);
      height: calc(var(--spacing) * 20);
    }
  }
  .lg\:size-24 {
    @media (width >= 64rem) {
      width: calc(var(--spacing) * 24);
      height: calc(var(--spacing) * 24);
    }
  }
  .lg\:size-30 {
    @media (width >= 64rem) {
      width: calc(var(--spacing) * 30);
      height: calc(var(--spacing) * 30);
    }
  }
  .lg\:size-32 {
    @media (width >= 64rem) {
      width: calc(var(--spacing) * 32);
      height: calc(var(--spacing) * 32);
    }
  }
  .lg\:h-\[50\%\] {
    @media (width >= 64rem) {
      height: 50%;
    }
  }
  .lg\:w-1\/2 {
    @media (width >= 64rem) {
      width: calc(1/2 * 100%);
    }
  }
  .lg\:w-1\/3 {
    @media (width >= 64rem) {
      width: calc(1/3 * 100%);
    }
  }
  .lg\:w-2\/5 {
    @media (width >= 64rem) {
      width: calc(2/5 * 100%);
    }
  }
  .lg\:w-12 {
    @media (width >= 64rem) {
      width: calc(var(--spacing) * 12);
    }
  }
  .lg\:w-20 {
    @media (width >= 64rem) {
      width: calc(var(--spacing) * 20);
    }
  }
  .lg\:w-30 {
    @media (width >= 64rem) {
      width: calc(var(--spacing) * 30);
    }
  }
  .lg\:w-\[70\%\] {
    @media (width >= 64rem) {
      width: 70%;
    }
  }
  .lg\:w-\[max\(30vh\,30vw\)\] {
    @media (width >= 64rem) {
      width: max(30vh, 30vw);
    }
  }
  .lg\:text-lg {
    @media (width >= 64rem) {
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
    }
  }
  .lg\:text-xl {
    @media (width >= 64rem) {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }
  .lg\:text-\[2\.5vw\] {
    @media (width >= 64rem) {
      font-size: 2.5vw;
    }
  }
  .lg\:text-\[2rem\] {
    @media (width >= 64rem) {
      font-size: 2rem;
    }
  }
  .landscape\:bottom-0 {
    @media (orientation: landscape) {
      bottom: calc(var(--spacing) * 0);
    }
  }
  .landscape\:mt-5 {
    @media (orientation: landscape) {
      margin-top: calc(var(--spacing) * 5);
    }
  }
  .landscape\:size-16 {
    @media (orientation: landscape) {
      width: calc(var(--spacing) * 16);
      height: calc(var(--spacing) * 16);
    }
  }
  .landscape\:size-24 {
    @media (orientation: landscape) {
      width: calc(var(--spacing) * 24);
      height: calc(var(--spacing) * 24);
    }
  }
  .landscape\:h-5 {
    @media (orientation: landscape) {
      height: calc(var(--spacing) * 5);
    }
  }
  .landscape\:w-1\/3 {
    @media (orientation: landscape) {
      width: calc(1/3 * 100%);
    }
  }
  .landscape\:w-16 {
    @media (orientation: landscape) {
      width: calc(var(--spacing) * 16);
    }
  }
  .landscape\:w-\[35\%\] {
    @media (orientation: landscape) {
      width: 35%;
    }
  }
  .landscape\:w-\[55\%\] {
    @media (orientation: landscape) {
      width: 55%;
    }
  }
  .landscape\:w-\[clamp\(40px\,30vw\,80\%\)\] {
    @media (orientation: landscape) {
      width: clamp(40px, 30vw, 80%);
    }
  }
  .landscape\:w-\[clamp\(40px\,40vw\,80\%\)\] {
    @media (orientation: landscape) {
      width: clamp(40px, 40vw, 80%);
    }
  }
  .landscape\:w-\[clamp\(40px\,50vw\,80\%\)\] {
    @media (orientation: landscape) {
      width: clamp(40px, 50vw, 80%);
    }
  }
  .landscape\:text-2xl {
    @media (orientation: landscape) {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
  }
  .landscape\:text-xl {
    @media (orientation: landscape) {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }
  .landscape\:md\:mr-3 {
    @media (orientation: landscape) {
      @media (width >= 48rem) {
        margin-right: calc(var(--spacing) * 3);
      }
    }
  }
  .landscape\:md\:w-1\/4 {
    @media (orientation: landscape) {
      @media (width >= 48rem) {
        width: calc(1/4 * 100%);
      }
    }
  }
  .landscape\:md\:w-full {
    @media (orientation: landscape) {
      @media (width >= 48rem) {
        width: 100%;
      }
    }
  }
  .md\:landscape\:w-1\/4 {
    @media (width >= 48rem) {
      @media (orientation: landscape) {
        width: calc(1/4 * 100%);
      }
    }
  }
  .md\:landscape\:w-\[30\%\] {
    @media (width >= 48rem) {
      @media (orientation: landscape) {
        width: 30%;
      }
    }
  }
  .md\:landscape\:w-\[40\%\] {
    @media (width >= 48rem) {
      @media (orientation: landscape) {
        width: 40%;
      }
    }
  }
  .md\:landscape\:w-\[50\%\] {
    @media (width >= 48rem) {
      @media (orientation: landscape) {
        width: 50%;
      }
    }
  }
  .md\:landscape\:w-\[60\%\] {
    @media (width >= 48rem) {
      @media (orientation: landscape) {
        width: 60%;
      }
    }
  }
  .md\:landscape\:w-\[80\%\] {
    @media (width >= 48rem) {
      @media (orientation: landscape) {
        width: 80%;
      }
    }
  }
  .lg\:landscape\:bottom-4 {
    @media (width >= 64rem) {
      @media (orientation: landscape) {
        bottom: calc(var(--spacing) * 4);
      }
    }
  }
  .lg\:landscape\:bottom-6 {
    @media (width >= 64rem) {
      @media (orientation: landscape) {
        bottom: calc(var(--spacing) * 6);
      }
    }
  }
  .lg\:landscape\:bottom-12 {
    @media (width >= 64rem) {
      @media (orientation: landscape) {
        bottom: calc(var(--spacing) * 12);
      }
    }
  }
  .landscape\:lg\:mt-12 {
    @media (orientation: landscape) {
      @media (width >= 64rem) {
        margin-top: calc(var(--spacing) * 12);
      }
    }
  }
  .landscape\:lg\:size-20 {
    @media (orientation: landscape) {
      @media (width >= 64rem) {
        width: calc(var(--spacing) * 20);
        height: calc(var(--spacing) * 20);
      }
    }
  }
  .lg\:landscape\:size-32 {
    @media (width >= 64rem) {
      @media (orientation: landscape) {
        width: calc(var(--spacing) * 32);
        height: calc(var(--spacing) * 32);
      }
    }
  }
  .lg\:landscape\:h-12 {
    @media (width >= 64rem) {
      @media (orientation: landscape) {
        height: calc(var(--spacing) * 12);
      }
    }
  }
  .landscape\:lg\:w-2\/3 {
    @media (orientation: landscape) {
      @media (width >= 64rem) {
        width: calc(2/3 * 100%);
      }
    }
  }
  .landscape\:lg\:w-\[75\%\] {
    @media (orientation: landscape) {
      @media (width >= 64rem) {
        width: 75%;
      }
    }
  }
  .landscape\:lg\:w-full {
    @media (orientation: landscape) {
      @media (width >= 64rem) {
        width: 100%;
      }
    }
  }
  .lg\:landscape\:w-20 {
    @media (width >= 64rem) {
      @media (orientation: landscape) {
        width: calc(var(--spacing) * 20);
      }
    }
  }
  .lg\:landscape\:w-\[70\%\] {
    @media (width >= 64rem) {
      @media (orientation: landscape) {
        width: 70%;
      }
    }
  }
  .lg\:landscape\:w-\[80\%\] {
    @media (width >= 64rem) {
      @media (orientation: landscape) {
        width: 80%;
      }
    }
  }
  .lg\:landscape\:text-2xl {
    @media (width >= 64rem) {
      @media (orientation: landscape) {
        font-size: var(--text-2xl);
        line-height: var(--tw-leading, var(--text-2xl--line-height));
      }
    }
  }
  .\[\@media\(max-height\:400px\)_and_\(orientation\:landscape\)\]\:hidden {
    @media (max-height:400px) and (orientation:landscape) {
      display: none;
    }
  }
}
@font-face {
  font-family: 'DVN';
  src: url('/public/font/DVN_GUSTAVO_Medium.ttf') format('truetype');
  font-weight: 500;
  font-style: normal;
}
@font-face {
  font-family: 'DVN';
  src: url('/public/font/DVN_Gustavo_Bold.ttf') format('truetype');
  font-weight: 700;
  font-style: normal;
}
@font-face {
  font-family: 'DVN';
  src: url('/public/font/DVN_Gustavo_Regular.ttf') format('truetype');
  font-weight: 400;
  font-style: normal;
}
html, body {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
  overflow: hidden;
  font-family: 'DVN', sans-serif;
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-tracking {
  syntax: "*";
  inherits: false;
}
@keyframes button {
  0% {
    transform: translateY(-600%);
  }
  27.27% {
    transform: translateY(600%);
  }
  100% {
    transform: translateY(600%);
  }
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-font-weight: initial;
      --tw-tracking: initial;
    }
  }
}
